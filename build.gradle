buildscript {
    ext.kotlin_version = "1.3.72"
    //ext.tornadofx_version = "1.7.20"
    ext.javafx_version = "11.0.2"
    ext.javafx_modules = [ 'javafx-controls', 'javafx.fxml' ]
}
plugins {
    id "application"
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'org.beryx.jlink' version '2.20.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

mainClassName = "com.gitnarwhal.MainKt"

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

application{
    mainModule = "gitnarwhal.main"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.kordamp.ikonli:ikonli-javafx:11.5.0'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign-pack:11.5.0'
}

javafx {
    version = '12'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

//add multi platform javafx
configurations.implementation.canBeResolved = true

println("IMPLEMENTATIONS!!!")
configurations.implementation.forEach{e-> println(e)}

jar {
    manifest {
        attributes(
                //"Class-Path": configurations.implementation.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from(configurations.implementation.sort().collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

jlink{
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'gitnarwhal'
    }
    jpackage {
        installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        /*MACOSX
        installerOptions = [
                '--mac-sign',
                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
        ]*/
        /*LINUX
        installerType = 'deb' // 'rpm'
        */
        installerOptions += '--verbose'
    }
}

