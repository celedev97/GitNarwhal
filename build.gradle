//region GLOBALS
buildscript {
    //dependencies versions/modules
    ext.kotlin_version = "1.3.72"
    ext.javafx_version = "11.0.2"
    ext.javafx_modules = [ 'javafx-controls', 'javafx.fxml' ]
}
//endregion



//region PLUGINS / REPOSITORIES
plugins {
    id "application"
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'org.beryx.jlink' version '2.20.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
//endregion
def gitnarwhalVersion = "0.0.1"
mainClassName = "com.gitnarwhal.MainKt"

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

application{
    mainModule = "gitnarwhal.main"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.kordamp.ikonli:ikonli-javafx:11.5.0'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign-pack:11.5.0'
}

javafx {
    version = '12'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

configurations.implementation.canBeResolved = true
configurations.implementation.forEach{e -> println(e)}

jar {
    archiveBaseName = mainClassName
    manifest {
        attributes(
                //"Class-Path": configurations.implementation.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName,
                "Specification-Version" : gitnarwhalVersion
        )
    }
}

task fatJar(type: Jar) {
    manifest.attributes = jar.manifest.attributes

    archiveBaseName = "GITNARWHAL"
    from { configurations.implementation.sort().collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}